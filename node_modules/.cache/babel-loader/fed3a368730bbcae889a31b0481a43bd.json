{"ast":null,"code":"import _objectSpread from \"/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/src/Containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedCount = oldcount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldcount = this.state.ingredients[type];\n\n      if (oldcount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldcount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('YOU Continue!');\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice.toFixed(2),\n        customer: {\n          name: 'foushware',\n          address: {\n            street: '',\n            zipCode: '',\n            country: ''\n          },\n          email: \"fousware@gmail.com\"\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(ressponse => console.log(ressponse)).catch(error => console.log(error));\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad:true,meat:false,bacon:true}\n\n\n    let orderSummary = React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    });\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientremoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      purchasable: this.state.purchasable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/src/Containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","axios","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","oldcount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","toFixed","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","ressponse","console","log","catch","error","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES={\n    salad:  0.5,\n    cheese: 0.4,\n    meat:   1.3,\n    bacon:  0.7\n};\nclass BurgerBuilder extends Component{\n\n    state={\n        ingredients:{\n            salad:  0,\n            bacon:  0,\n            cheese: 0,\n            meat:   0\n        },\n        totalPrice:4,\n        purchasable:false,\n        purchasing:false,\n        loading:false\n    }\n\n    updatePurchaseState(ingredients){\n        \n        const sum = Object.keys(ingredients).map(igKey=>{\n            return ingredients[igKey];\n        }).reduce((sum,el)=>{return sum+el},0);\n        this.setState({purchasable: sum > 0})\n    }\n    addIngredientHandler=(type)=>{\n        const oldcount=this.state.ingredients[type];\n        const updatedCount=oldcount +1;\n        const updatedIngredients={...this.state.ingredients};\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice+priceAddition;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler=(type)=>{\n        const oldcount=this.state.ingredients[type];\n        if(oldcount <= 0){\n            return;\n        }\n        const updatedCount=oldcount -1;\n        const updatedIngredients={...this.state.ingredients};\n        updatedIngredients[type]=updatedCount;\n        const priceDeduction=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice-priceDeduction;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler=()=>{\n        this.setState({purchasing:true});\n    }\n    purchaseCancelHandler=()=>{\n        this.setState({purchasing:false});\n    }\n    purchaseContinueHandler=()=>{\n        // alert('YOU Continue!');\n        const order={\n            ingredients:this.state.ingredients,\n            price:this.state.totalPrice.toFixed(2),\n            customer:{\n                name:'foushware',\n                address:{\n                    street:'',\n                    zipCode:'',\n                    country:''\n                },\n                email:\"fousware@gmail.com\"\n            },\n            deliveryMethod:'fastest'\n        }\n\n        axios.post('/orders.json',order)\n            .then(ressponse=>console.log(ressponse))\n            .catch(error=>console.log(error));\n\n    }\n\n    render(){\n        const disabledInfo={\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo){\n            disabledInfo[key]=disabledInfo[key]<=0;\n\n        }\n        // {salad:true,meat:false,bacon:true}\n\n        let orderSummary= <OrderSummary\n        ingredients={this.state.ingredients}\n        purchaseCancelled={this.purchaseCancelHandler}\n        purchaseContinued={this.purchaseContinueHandler}\n        price={this.state.totalPrice}/>;\n\n        return(\n\n            \n            <>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    \n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                         ingredientAdded={this.addIngredientHandler}\n                         ingredientremoved={this.removeIngredientHandler}\n                         disabled={disabledInfo}\n                         price={this.state.totalPrice}\n                         ordered={this.purchaseHandler}\n                         purchasable={this.state.purchasable}\n                />\n            </>\n        );\n    }\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}