{"ast":null,"code":"import _objectSpread from \"/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/src/Containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedCount = oldcount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldcount = this.state.ingredients[type];\n\n      if (oldcount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldcount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('YOU Continue!');\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'foushware',\n          address: {\n            street: '',\n            zipCode: '',\n            country: ''\n          },\n          email: \"fousware@gmail.com\"\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then();\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad:true,meat:false,bacon:true}\n\n\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientremoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      ordered: this.purchaseHandler,\n      purchasable: this.state.purchasable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/src/Containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","axios","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldcount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES={\n    salad:  0.5,\n    cheese: 0.4,\n    meat:   1.3,\n    bacon:  0.7\n};\nclass BurgerBuilder extends Component{\n\n    state={\n        ingredients:{\n            salad:  0,\n            bacon:  0,\n            cheese: 0,\n            meat:   0\n        },\n        totalPrice:4,\n        purchasable:false,\n        purchasing:false\n    }\n\n    updatePurchaseState(ingredients){\n        \n        const sum = Object.keys(ingredients).map(igKey=>{\n            return ingredients[igKey];\n        }).reduce((sum,el)=>{return sum+el},0);\n        this.setState({purchasable: sum > 0})\n    }\n    addIngredientHandler=(type)=>{\n        const oldcount=this.state.ingredients[type];\n        const updatedCount=oldcount +1;\n        const updatedIngredients={...this.state.ingredients};\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice+priceAddition;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler=(type)=>{\n        const oldcount=this.state.ingredients[type];\n        if(oldcount <= 0){\n            return;\n        }\n        const updatedCount=oldcount -1;\n        const updatedIngredients={...this.state.ingredients};\n        updatedIngredients[type]=updatedCount;\n        const priceDeduction=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice-priceDeduction;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler=()=>{\n        this.setState({purchasing:true});\n    }\n    purchaseCancelHandler=()=>{\n        this.setState({purchasing:false});\n    }\n    purchaseContinueHandler=()=>{\n        // alert('YOU Continue!');\n        const order={\n            ingredients:this.state.ingredients,\n            price:this.state.totalPrice,\n            customer:{\n                name:'foushware',\n                address:{\n                    street:'',\n                    zipCode:'',\n                    country:''\n                },\n                email:\"fousware@gmail.com\"\n            },\n            deliveryMethod:'fastest'\n        }\n        axios.post('/orders.json',order)\n            .then();\n\n    }\n\n    render(){\n        const disabledInfo={\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo){\n            disabledInfo[key]=disabledInfo[key]<=0;\n\n        }\n        // {salad:true,meat:false,bacon:true}\n        return(\n            <>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary\n                         ingredients={this.state.ingredients}\n                         purchaseCancelled={this.purchaseCancelHandler}\n                         purchaseContinued={this.purchaseContinueHandler}\n                         price={this.state.totalPrice}\n                              \n                         \n                    />\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BuildControls\n                         ingredientAdded={this.addIngredientHandler}\n                         ingredientremoved={this.removeIngredientHandler}\n                         disabled={disabledInfo}\n                         price={this.state.totalPrice}\n                         ordered={this.purchaseHandler}\n                         purchasable={this.state.purchasable}\n                />\n            </>\n        );\n    }\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}