{"ast":null,"code":"import _objectSpread from \"/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/src/Containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErroHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldcount = this.state.ingredients[type];\n      const updatedCount = oldcount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldcount = this.state.ingredients[type];\n\n      if (oldcount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldcount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      console.log(this.props.history);\n      this.props.history.push('/checkout'); // this.setState({loading:true});\n      // alert('YOU Continue!');\n      // const order={\n      //     ingredients:this.state.ingredients,\n      //     price:this.state.totalPrice.toFixed(2),\n      //     customer:{\n      //         name:'foushware',\n      //         address:{\n      //             street:'',\n      //             zipCode:'',\n      //             country:''\n      //         },\n      //         email:\"fousware@gmail.com\"\n      //     },\n      //     deliveryMethod:'fastest'\n      // }\n      // axios.post('/orders.json',order)\n      //     .then(\n      //         ressponse=>\n      //         // console.log(ressponse)\n      //         this.setState({loading:false,purchasing:false})\n      //         )\n      //     .catch(error=>\n      //         // console.log(error)\n      //         this.setState({loading:false,purchasing:false})\n      //         );\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://react-my-burger-759e5.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad:true,meat:false,bacon:true}\n\n\n    let orderSummary = null;\n    let burger = this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"ingredients can't be loaded!\") : React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    });\n\n    if (this.state.ingredients) {\n      burger = React.createElement(React.Fragment, null, React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientremoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        purchasable: this.state.purchasable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n      orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        });\n      }\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default WithErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["/home/tom/Ahmed fouad/foush/Learning&work/work/burgerApp/src/Containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","axios","OrderSummary","Spinner","WithErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldcount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","console","log","props","history","push","componentDidMount","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react';\nimport Burger from '../../Components/Burger/Burger';\nimport BuildControls from '../../Components/Burger/BuildControls/BuildControls';\nimport Modal from '../../Components/UI/Modal/Modal';\nimport axios from '../../axios-orders';\nimport OrderSummary from '../../Components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../Components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/WithErroHandler';\nconst INGREDIENT_PRICES={\n    salad:  0.5,\n    cheese: 0.4,\n    meat:   1.3,\n    bacon:  0.7\n};\nclass BurgerBuilder extends Component{\n\n    state={\n        ingredients:null,\n        totalPrice:4,\n        purchasable:false,\n        purchasing:false,\n        loading:false,\n        error:false\n    }\n    componentDidMount() {\n        axios.get('https://react-my-burger-759e5.firebaseio.com/ingredients.json')\n        .then(\n            response=>{\n                    this.setState({ingredients:response.data})\n            }\n        ).catch(error=>{\n            this.setState({error:true});\n        });\n    }\n\n    updatePurchaseState(ingredients){\n        \n        const sum = Object.keys(ingredients).map(igKey=>{\n            return ingredients[igKey];\n        }).reduce((sum,el)=>{return sum+el},0);\n        this.setState({purchasable: sum > 0})\n    }\n    addIngredientHandler=(type)=>{\n        const oldcount=this.state.ingredients[type];\n        const updatedCount=oldcount +1;\n        const updatedIngredients={...this.state.ingredients};\n        updatedIngredients[type]=updatedCount;\n        const priceAddition=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice+priceAddition;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n       // this.setState({loading:true});\n        // // alert('YOU Continue!');\n        // const order={\n        //     ingredients:this.state.ingredients,\n        //     price:this.state.totalPrice.toFixed(2),\n        //     customer:{\n        //         name:'foushware',\n        //         address:{\n        //             street:'',\n        //             zipCode:'',\n        //             country:''\n        //         },\n        //         email:\"fousware@gmail.com\"\n        //     },\n        //     deliveryMethod:'fastest'\n        // }\n\n        // axios.post('/orders.json',order)\n        //     .then(\n        //         ressponse=>\n        //         // console.log(ressponse)\n        //         this.setState({loading:false,purchasing:false})\n                \n        //         )\n        //     .catch(error=>\n        //         // console.log(error)\n        //         this.setState({loading:false,purchasing:false})\n        //         );\n    removeIngredientHandler=(type)=>{\n        const oldcount=this.state.ingredients[type];\n        if(oldcount <= 0){\n            return;\n        }\n        const updatedCount=oldcount -1;\n        const updatedIngredients={...this.state.ingredients};\n        updatedIngredients[type]=updatedCount;\n        const priceDeduction=INGREDIENT_PRICES[type];\n        const oldPrice=this.state.totalPrice;\n        const newPrice=oldPrice-priceDeduction;\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    purchaseHandler=()=>{\n        this.setState({purchasing:true});\n    }\n    purchaseCancelHandler=()=>{\n        this.setState({purchasing:false});\n    }\n    purchaseContinueHandler=()=>{\n\n        console.log(this.props.history);\n        this.props.history.push('/checkout');\n\n        // this.setState({loading:true});\n        // alert('YOU Continue!');\n        // const order={\n        //     ingredients:this.state.ingredients,\n        //     price:this.state.totalPrice.toFixed(2),\n        //     customer:{\n        //         name:'foushware',\n        //         address:{\n        //             street:'',\n        //             zipCode:'',\n        //             country:''\n        //         },\n        //         email:\"fousware@gmail.com\"\n        //     },\n        //     deliveryMethod:'fastest'\n        // }\n\n        // axios.post('/orders.json',order)\n        //     .then(\n        //         ressponse=>\n        //         // console.log(ressponse)\n        //         this.setState({loading:false,purchasing:false})\n                \n        //         )\n        //     .catch(error=>\n        //         // console.log(error)\n        //         this.setState({loading:false,purchasing:false})\n        //         );\n\n    }\n\n    render(){\n        const disabledInfo={\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo){\n            disabledInfo[key]=disabledInfo[key]<=0;\n\n        }\n        // {salad:true,meat:false,bacon:true}\n\n        let orderSummary=null;\n         \n\n        \n        let burger=this.state.error?<p>ingredients can't be loaded!</p>:<Spinner/>;\n\n        if(this.state.ingredients){\n            burger=(\n                <>\n                    <Burger ingredients={this.state.ingredients}/>\n                        <BuildControls\n                                ingredientAdded={this.addIngredientHandler}\n                                ingredientremoved={this.removeIngredientHandler}\n                                disabled={disabledInfo}\n                                price={this.state.totalPrice}\n                                ordered={this.purchaseHandler}\n                                purchasable={this.state.purchasable}\n                        />\n                </>\n            );\n\n        orderSummary= <OrderSummary\n            ingredients={this.state.ingredients}\n            purchaseCancelled={this.purchaseCancelHandler}\n            purchaseContinued={this.purchaseContinueHandler}\n            price={this.state.totalPrice}/>;\n\n\n            if(this.state.loading){\n                orderSummary=<Spinner/>\n            }\n        }\n       \n        return(\n\n            \n            <>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n                \n            </>\n        );\n    }\n}\nexport default WithErrorHandler(BurgerBuilder,axios);"]},"metadata":{},"sourceType":"module"}